diff --git a/system-linux.c b/system-linux.c
index cbcc5bd..544b5a6 100644
--- a/system-linux.c
+++ b/system-linux.c
@@ -45,6 +45,7 @@
 #include <fcntl.h>
 #include <glob.h>
 #include <time.h>
+#include <syslog.h>
 
 #include <netlink/msg.h>
 #include <netlink/attr.h>
@@ -1032,7 +1033,14 @@ static int system_addr(struct device *dev, struct device_addr *addr, int cmd)
 		nla_put(msg, IFA_CACHEINFO, sizeof(cinfo), &cinfo);
 	}
 
-	return system_rtnl_call(msg);
+	int ret = system_rtnl_call(msg);
+	char buf[INET6_ADDRSTRLEN];
+	inet_ntop((v4) ? AF_INET : AF_INET6, &addr->addr, buf, sizeof(buf));
+	syslog(LOG_WARNING, "%s address %s on interface %s: %d",
+			(cmd == RTM_NEWADDR) ? "set" : "remove",
+			buf, dev->ifname, ret);
+
+	return ret;
 }
 
 int system_add_address(struct device *dev, struct device_addr *addr)
@@ -1109,7 +1117,14 @@ static int system_rt(struct device *dev, struct device_route *route, int cmd)
 	if (table >= 256)
 		nla_put_u32(msg, RTA_TABLE, table);
 
-	return system_rtnl_call(msg);
+	int ret = system_rtnl_call(msg);
+	char buf[INET6_ADDRSTRLEN];
+	inet_ntop((alen == 4) ? AF_INET : AF_INET6, &route->addr, buf, sizeof(buf));
+	syslog(LOG_WARNING, "%s route to %s on interface %s: %d",
+			(cmd == RTM_NEWROUTE) ? "set" : "remove",
+			buf, (dev) ? dev->ifname : "<none>", ret);
+
+	return ret;
 }
 
 int system_add_route(struct device *dev, struct device_route *route)
